$black: #000
$white: #fff
$dark: #171717

$grey: #D9D9D9
$grey2: #484848
$grey3: #89898D
$grey4: #37383B
$grey5: #A0A0A0
$grey6: #3C4043
$grey7: #ebebeb
$grey8: #A6A6A6
$grey9: #323232
$grey10: #293A48
$grey11: #808A9D
$grey12: #828282
$grey13: #051018

$pink: #F4E7FF
$blue: #E8FDFB
$blue1: #E6F4FD
$blue2: #D3F7FF
$blue3: #56C2FF
$blue4: #F4F7FD


$green: #099818
$red: #f22020
$orange: #FCA11F
$magenta: #763FBF
$magenta2: #8C77ED

$ffHeading: 'OpenSans'
$ffText: 'Poppins'
$ffText2: 'Montserrat'
$ffBack: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"

$xlg: 1400
$lg: 1200
$md: 991
$sm: 768
$xsm: 520
$xs: 480
$xxs: 360


$trs: all 0.35s ease-in-out

$brs: 8px
$brs2: 40px
$brs3: 15px
$brs4: 20px

$gap20: 20px

$grad1: linear-gradient(275.45deg, rgba(86, 255, 235, 0.3) 5.22%, rgba(64, 198, 255, 0.3) 20.89%, rgba(126, 73, 243, 0.3) 36.76%, rgba(255, 255, 255, 0) 75.63%, rgba(40, 9, 228, 0.3) 97.8%)


$bxsd: 0 0 1px 1px rgba(86, 255, 235, 0.3), 0 0 1px 1px rgba(64, 198, 255, 0.3), 0 0 1px 1px rgba(126, 73, 243, 0.3), 0 0 1px 1px rgba(255, 255, 255, 0), 0 0 1px 1px rgba(40, 9, 228, 0.3)    
$bxsd1: 2px 4px 34px rgba(2, 4, 14, 0.05), inset 0px 4px 23px rgba(136, 156, 227, 0.05)	
$bxsd2: 0px 4.23881px 10.597px rgba(140, 119, 237, 0.3), inset 0px 4px 4px rgba(0, 0, 0, 0.15)    
$bxsd3: 0 5px 30px rgba($black, 0.1)
$bxsd4: 0px 2px 10px rgba(118, 63, 191, 0.25)

=ft($fz, $lh: 16, $fw: 400, $ff: $ffText)
	$lh: $lh/$fz
	$fz: $fz/16 + rem
	$ff: $ff, $ffBack
	font: $fw $fz/$lh $ff 


=theme($theme)
	@if $theme == dark
		background-color: $dark
		color: $grey

		*::selection
			background-color: rgba($white, 0.1)

	@if $theme == white
		background-color: $white
		color: $black

		.text__sub
			color: $grey2


	@if $theme == grey
		background-color: rgba($black, 0.07)
		backdrop-filter: blur(5.5px)
		color: $black
		&:hover, &:active, &:focus
			background-color: rgba($black, 0.1)

	@if $theme == blue
		background-color: $blue2
		color: $grey4
		&:hover, &:active, &:focus
			background-color: darken($blue2, 5%)


=sz($w, $h)
	width: $w
	height: $h

=flex($fx, $ai, $jc, $fxw)
	display: $fx
	align-items: $ai
	justify-content: $jc
	flex-wrap: $fxw


// input +padding((t, 30px), (b, 40px))
// +position(absolute, (t, 0), (r, 0))
=position($ps, $val)
	@each $x in $ps
		@if $x == t
			top: $val

		@if $x == b
			bottom: $val

		@if $x == l
			left: $val

		@if $x == r
			right: $val

=ps($params...)
	position: nth($params, 1)
	@each $par, $val in $params
		@if $par != null and $val != null
			+position($par, $val)

// input +padding((t, 30px), (b, 40px))
=padding($pd, $val)
	@if $pd == t
		padding-top: $val

	@if $pd == b
		padding-bottom: $val

	@if $pd == l
		padding-left: $val

	@if $pd == r
		padding-right: $val

	@if $pd == all
		padding: $val

	

=pd($params...)
	@each $par, $val in $params
		@if $par != null and $val != null
			+padding($par, $val)

=margin($mg, $val)
	@if $mg == t
		margin-top: $val

	@if $mg == b
		margin-bottom: $val

	@if $mg == l
		margin-left: $val

	@if $mg == r
		margin-right: $val

	@if $mg == all
		margin: $val

=mg($params...)
	@each $par, $val in $params
		@if $par != null and $val != null
			+margin($par, $val)

// =sp($prop, $params...)
// 	@if $prop == mg
// 		+mg($params)
// 	@if $prop == pd 
// 		+pd($params)	

$i: 0
=spacer($arr)
	@for $val from 1 through length($arr) 
		$spr: nth($arr, 1)
	@if $spr == mg
		@for $i from 2 through length($arr)
			$props: nth($arr, $i)
			+margin($props...)
	@if $spr == pd
		@for $i from 2 through length($arr)
			$props: nth($arr, $i)
			+padding($props...)
	
=sp($x, $y)
	+spacer($x)
	+spacer($y)
		
	
//+sp((mg, (l, 20px), (b, 15px)), (pd, (r, 10px)))

	
=maw($brkp)
	@media only screen and (max-width: $brkp+"px")
		@content

=miw($brkp)
	@media only screen and (min-width: $brkp+"px")
		@content

=mw($min, $max)
	@media only screen and (min-width: $min+"px") and (max-width: $max+"px")
		@content


@function rem($val)
	$res: $val/16 + rem
	@return $res

@function em($val)
	$res: $val/16 + em
	@return $res 



//  font-size: calc([minfz] + ([maxfz] - [minfz]) * ((100vw - [miw]) / ([maw] - [miw])));
	
=rfz($maw, $miw, $minfz, $maxfz)
	$maw : $maw + px
	$miw : $miw + px
	$minfz : $minfz + px
	$maxfz : $maxfz + px	
	@media only screen and (min-width: $miw) 
		font-size: calc(#{$minfz} + (#{$maxfz} - #{$minfz}) * ((100vw - #{$miw}) / (#{$maw} - #{$miw})))

	@media only screen and (min-width: $maw)
		font-size: $maxfz
	
// +rfz(1120, 320, 12, 40)

%card
	border: none
	background: rgba($white, 0.92)
	box-shadow: 2px 4px 34px rgba(2, 4, 14, 0.05), inset 0px 4px 23px rgba(136, 156, 227, 0.05)
	border-radius: 15px

	*::selection
		background-color: lighten($grey7, 5%)

%mask
	mask: $grad1
	mask-composite: exclude
	-webkit-mask: $grad1
	-webkit-mask-composite: xor
	content: ""
	position: absolute
	z-index: 0
	inset: 0
	padding: 2px

